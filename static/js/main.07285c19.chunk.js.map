{"version":3,"sources":["helpers/GridHelper.jsx","hooks/useHover.jsx","pages/Index.jsx","App.js","reportWebVitals.js","index.js"],"names":["GridHelper","props","state","isVisible","keyDownHandler","bind","e","keyCode","this","setState","oldState","document","addEventListener","removeEventListener","className","md","React","Component","useHover","useState","value","setValue","ref","useRef","handleMouseOver","handleMouseOut","useEffect","node","current","Index","selectedTheme","setSelectedTheme","hoverRef1","isHovered1","hoverRef2","isHovered2","hoverRef3","isHovered3","hoverRef4","isHovered4","hoverRef5","isHovered5","hoverRef6","isHovered6","hoverRef7","isHovered7","anyIsHovered","some","x","anyIsSelected","isSelected","id","onThemeSelect","el","querySelector","window","scroll","top","offsetTop","left","behavior","offset","cx","onClick","target","data","themes","find","theme","title","events","map","event","eventIndex","subEvents","subevent","subeventIndex","entries","entry","entryIndex","anecdote","source","type","setConfiguration","breakpoints","containerWidths","gutterWidth","gridColumns","defaultScreenClass","maxScreenClass","App","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07285c19.chunk.js","sourcesContent":["import './GridHelper.css';\n\nimport { Col, Container, Row } from 'react-grid-system';\n\n// Packages\nimport React from 'react';\n\nclass GridHelper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n    this.keyDownHandler = this.keyDownHandler.bind(this);\n  }\n\n  keyDownHandler(e) {\n    if (e.keyCode === 27) {\n      this.setState(oldState => {\n        return { isVisible: !oldState.isVisible };\n      });\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.keyDownHandler, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.keyDownHandler, false);\n  }\n\n  render() {\n    return (\n      <div\n        className={`grid-helper ${this.state.isVisible ? ' isVisible' : ''}`}\n      >\n        <Container className=\"grid__container\">\n          <Row className=\"grid__row\">\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n            <Col md={1} className=\"grid-helper__col\" />\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default GridHelper;\n","import { useEffect, useRef, useState } from 'react';\n\n// Hook\nexport default function useHover() {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver);\n        node.addEventListener('mouseout', handleMouseOut);\n\n        return () => {\n          node.removeEventListener('mouseover', handleMouseOver);\n          node.removeEventListener('mouseout', handleMouseOut);\n        };\n      }\n    },\n    [ref.current] // Recall only if ref changes\n  );\n\n  return [ref, value];\n}\n","import './Index.css';\n\nimport { Col, Container, Row } from 'react-grid-system';\nimport { useRef, useState } from 'react';\n\nimport React from 'react';\nimport cx from 'classnames/bind';\nimport data from '../data/index.json';\nimport useHover from '../hooks/useHover';\n\nconst Index = () => {\n  const [selectedTheme, setSelectedTheme] = useState(null);\n\n  const [hoverRef1, isHovered1] = useHover();\n  const [hoverRef2, isHovered2] = useHover();\n  const [hoverRef3, isHovered3] = useHover();\n  const [hoverRef4, isHovered4] = useHover();\n  const [hoverRef5, isHovered5] = useHover();\n  const [hoverRef6, isHovered6] = useHover();\n  const [hoverRef7, isHovered7] = useHover();\n\n  const anyIsHovered = () => {\n    return [\n      isHovered1,\n      isHovered2,\n      isHovered3,\n      isHovered4,\n      isHovered5,\n      isHovered6,\n      isHovered7\n    ].some(x => !!x);\n  };\n\n  const anyIsSelected = () => {\n    return selectedTheme !== null;\n  };\n\n  const isSelected = id => {\n    return id === selectedTheme;\n  };\n\n  const onThemeSelect = id => {\n    setSelectedTheme(id);\n    var el = document.querySelector('.directory__current-theme');\n    window.scroll({ top: el.offsetTop, left: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"Index\">\n      <Container className=\"grid__container\">\n        <Row className=\"grid__row directory\">\n          <Col md={3} className=\"medium-body directory__item-description\">\n            {anyIsHovered() ? (\n              <div className=\"directory__item-description--visible\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\n                congue euismod lorem consequat vehicula. Integer eu bibendum\n                nisl, sed ultrices dolor. Nullam dapibus, nunc vitae tempor\n                scelerisque, mi elit rhoncus purus, quis euismod mauris sapien\n                quis ipsum.\n              </div>\n            ) : (\n              <div className=\"directory__item-description--hidden\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\n                congue euismod lorem consequat vehicula. Integer eu bibendum\n                nisl, sed ultrices dolor. Nullam dapibus, nunc vitae tempor\n                scelerisque, mi elit rhoncus purus, quis euismod mauris sapien\n                quis ipsum.\n              </div>\n            )}\n          </Col>\n\n          <Col\n            offset={{ md: 1 }}\n            md={8}\n            className={cx('large-headline', 'directory__list', {\n              'directory__list--hover': anyIsHovered(),\n              'directory__list--selected': anyIsSelected()\n            })}\n          >\n            <span\n              ref={hoverRef1}\n              id=\"all\"\n              onClick={e => onThemeSelect(e.target.id)}\n              className={cx({\n                'directory__list-item--selected': isSelected('all')\n              })}\n            >\n              All\n            </span>\n            <span\n              ref={hoverRef2}\n              id=\"language\"\n              onClick={e => onThemeSelect(e.target.id)}\n              className={cx({\n                'directory__list-item--selected': isSelected('language')\n              })}\n            >\n              Language\n            </span>\n            <span\n              ref={hoverRef3}\n              id=\"censorship\"\n              onClick={e => {\n                onThemeSelect(e.target.id);\n              }}\n              className={cx({\n                'directory__list-item--selected': isSelected('censorship')\n              })}\n            >\n              Censorship\n            </span>\n            <span\n              ref={hoverRef4}\n              id=\"collective_memory\"\n              onClick={e => onThemeSelect(e.target.id)}\n              className={cx({\n                'directory__list-item--selected': isSelected(\n                  'collective_memory'\n                )\n              })}\n            >\n              Collective Memory\n            </span>\n            <span\n              ref={hoverRef5}\n              id=\"diaspora\"\n              onClick={e => onThemeSelect(e.target.id)}\n              className={cx({\n                'directory__list-item--selected': isSelected('diaspora')\n              })}\n            >\n              Diaspora\n            </span>\n            <span\n              ref={hoverRef6}\n              id=\"in_betweeness\"\n              onClick={e => onThemeSelect(e.target.id)}\n              className={cx({\n                'directory__list-item--selected': isSelected('in_betweeness')\n              })}\n            >\n              In-Betweeness\n            </span>\n            <span\n              ref={hoverRef7}\n              id=\"national_identity\"\n              onClick={e => onThemeSelect(e.target.id)}\n              className={cx({\n                'directory__list-item--selected': isSelected(\n                  'national_identity'\n                )\n              })}\n            >\n              National Identity\n            </span>\n          </Col>\n        </Row>\n        <Row\n          className={cx('grid__row directory__current-theme', {\n            'sticky directory__current-theme--visible': anyIsSelected()\n          })}\n        >\n          <Col offset={{ md: 4 }} md={8}>\n            <span className=\"small-headline\">\n              {selectedTheme\n                ? data.themes.find(theme => theme.id === selectedTheme).title\n                : null}\n            </span>\n          </Col>\n        </Row>\n        <div className=\"lower-nav__container sticky\">\n          <Row className=\"grid__row divider thick\" />\n          <Row className=\"grid__row lower-nav-bar\">\n            <Col md={4} className=\"medium-caption\">\n              Event\n            </Col>\n            <Col md={3} className=\"medium-caption\">\n              Anecdotes\n            </Col>\n            <Col md={3} className=\"medium-caption\">\n              Source\n            </Col>\n            <Col md={2} className=\"medium-caption\">\n              Type\n            </Col>\n          </Row>\n          <Row className=\"grid__row divider thin\" />\n        </div>\n        {data.events.map((event, eventIndex) => {\n          return (\n            <>\n              <div className=\"event__container sticky\">\n                <Row className=\"grid__row event-header\">\n                  <Col md={4} className=\"medium-body\">\n                    <div>{event.title}</div>\n                    <div>1989</div>\n                  </Col>\n                </Row>\n                <Row className=\"grid__row divider thinnest\" />\n              </div>\n              {event.subEvents.map((subevent, subeventIndex) => {\n                return (\n                  <>\n                    <Row className=\"grid__row index-entry\">\n                      <Col md={4} className=\"regular-caption\">\n                        {subevent.title}\n                      </Col>\n                      {subevent.entries.map((entry, entryIndex) => {\n                        return (\n                          <>\n                            <Col\n                              offset={{ md: entryIndex ? 4 : 0 }}\n                              md={3}\n                              className=\"regular-caption truncate\"\n                            >\n                              {entry.anecdote}\n                            </Col>\n                            <Col\n                              md={3}\n                              className=\"regular-caption light truncate\"\n                            >\n                              {entry.source}\n                            </Col>\n                            <Col\n                              md={2}\n                              className=\"regular-caption light truncate\"\n                            >\n                              {entry.type}\n                            </Col>\n                          </>\n                        );\n                      })}\n                    </Row>\n                    <Row className=\"grid__row divider thinnest\" />\n                  </>\n                );\n              })}\n            </>\n          );\n        })}\n      </Container>\n    </div>\n  );\n};\n\nexport default Index;\n","import './App.css';\n\nimport { Col, Container, Row } from 'react-grid-system';\nimport { Link, Route, HashRouter as Router, Switch } from 'react-router-dom';\n\nimport GridHelper from './helpers/GridHelper.jsx';\nimport Index from './pages/Index.jsx';\nimport React from 'react';\nimport { ScreenClassProvider } from 'react-grid-system';\nimport { setConfiguration } from 'react-grid-system';\n\nsetConfiguration({\n  // The breakpoints (minimum width) of devices in screen class sm, md, lg, xl, and xxl.\n  breakpoints: [375, 756, 1056, 1440, 1800],\n\n  // The container widths in pixels of devices in screen class sm, md, lg, xl, and xxl.\n  containerWidths: [],\n\n  // The gutter width in pixels. A gutter width of 30 means 15px on each side of a column.\n  gutterWidth: 24,\n\n  // The number of columns in the grid .\n  gridColumns: 12,\n\n  // The screen class used when the view port cannot be determined using window.\n  defaultScreenClass: 'lg',\n\n  // The maximum screen class to be used.\n  maxScreenClass: 'xxl'\n});\n\nfunction App() {\n  return (\n    <Router>\n      <ScreenClassProvider>\n        <GridHelper />\n        <div className=\"nav-bar__container\">\n          <Container className=\"grid__container\">\n            <Row className=\"grid__row nav-bar\">\n              <Col md={4} className=\"medium-caption\">\n                <Link to=\"/\">On Borrowed Time</Link>\n              </Col>\n              <Col md={3} className=\"medium-caption\">\n                <Link>Theme</Link>\n              </Col>\n              <Col md={4} className=\"medium-caption\">\n                <Link to=\"/index\">Index</Link>\n              </Col>\n              <Col md={1} className=\"medium-caption\">\n                <Link>English</Link>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <div>Home</div>\n          </Route>\n          <Route path=\"/index\">\n            <Index />\n          </Route>\n        </Switch>\n      </ScreenClassProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
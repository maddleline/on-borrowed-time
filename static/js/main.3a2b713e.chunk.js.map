{"version":3,"sources":["helpers/GridHelper.jsx","pages/Index.jsx","App.js","reportWebVitals.js","index.js"],"names":["GridHelper","props","state","isVisible","keyDownHandler","bind","e","keyCode","this","setState","oldState","document","addEventListener","removeEventListener","className","md","React","Component","Index","setConfiguration","breakpoints","containerWidths","gutterWidth","gridColumns","defaultScreenClass","maxScreenClass","App","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sVA2DeA,E,kDAnDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAW,GAEb,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALL,E,2DAQJC,GACK,KAAdA,EAAEC,SACJC,KAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEP,WAAYO,EAASP,gB,0CAMlCQ,SAASC,iBAAiB,UAAWJ,KAAKJ,gBAAgB,K,6CAG1DO,SAASE,oBAAoB,UAAWL,KAAKJ,gBAAgB,K,+BAI7D,OACE,qBACEU,UAAS,sBACPN,KAAKN,MAAMC,UAAY,aAAe,IAF1C,SAKE,cAAC,YAAD,CAAWW,UAAU,iBAArB,SACE,eAAC,MAAD,CAAKA,UAAU,UAAf,UACE,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,qBACtB,cAAC,MAAD,CAAKC,GAAI,EAAGD,UAAU,gC,GA5CTE,IAAMC,WCYhBC,G,MAfD,WACZ,OACE,qBAAKJ,UAAS,+BAAd,SACA,cAAC,YAAD,CAAWA,UAAU,iBAArB,SACE,eAAC,MAAD,CAAKA,UAAU,UAAf,UACE,cAAC,MAAD,CAAKC,GAAI,IACT,cAAC,MAAD,CAAKA,GAAI,IACT,cAAC,MAAD,CAAKA,GAAI,IACT,cAAC,MAAD,CAAKA,GAAI,IACT,eAAC,MAAD,CAAKA,GAAI,EAAT,gBAAe,uBAAf,WAA6B,uBAA7B,aAA6C,uBAA7C,oBAAoE,uBAApE,WAAkF,uBAAlF,gBAAqG,uBAArG,gCCCRI,2BAAiB,CAEfC,YAAa,CAAC,IAAK,IAAK,KAAM,KAAM,MAGpCC,gBAAiB,GAGjBC,YAAa,GAGbC,YAAa,GAGbC,mBAAoB,MAGpBC,eAAgB,QAyCHC,MAtCf,WACE,OACE,cAAC,IAAD,UACA,eAAC,sBAAD,WACE,cAAC,EAAD,IACA,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,wBAIJ,uBASA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,yCAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,kBCnDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,SAM1BZ,M","file":"static/js/main.3a2b713e.chunk.js","sourcesContent":["import './GridHelper.css';\n\nimport { Col, Container, Row } from 'react-grid-system';\n\n// Packages\nimport React from 'react';\n\nclass GridHelper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n    this.keyDownHandler = this.keyDownHandler.bind(this);\n  }\n\n  keyDownHandler(e) {\n    if (e.keyCode === 27) {\n      this.setState(oldState => {\n        return { isVisible: !oldState.isVisible };\n      });\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.keyDownHandler, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.keyDownHandler, false);\n  }\n\n  render() {\n    return (\n      <div\n        className={`grid-helper ${\n          this.state.isVisible ? ' isVisible' : ''\n        }`}\n      >\n        <Container className=\"grid-container\">\n          <Row className=\"bx--row\">\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n            <Col md={1} className=\"grid-helper__col\"/>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default GridHelper;\n","import './Index.css';\n\nimport { Col, Container, Row } from 'react-grid-system';\n\nconst Index = () => {\n  return (\n    <div className={`Index index-helper isVisible`}>\n    <Container className=\"grid-container\">\n      <Row className=\"bx--row\">\n        <Col md={1}/>\n        <Col md={1}/>\n        <Col md={1}/>\n        <Col md={1}/>\n        <Col md={8}>All<br />Language<br />Censorship<br />Collective Memory<br />Diaspora<br />In-Betweeness<br />National Identity</Col>\n      </Row>\n    </Container>\n  </div>  )\n}\n\nexport default Index;","import './App.css';\n\nimport {\n  Link,\n  Route,\n  HashRouter as Router,\n  Switch\n} from \"react-router-dom\";\n\nimport GridHelper from './helpers/GridHelper.jsx';\nimport Index from './pages/Index.jsx';\nimport { ScreenClassProvider } from 'react-grid-system';\nimport { setConfiguration } from 'react-grid-system';\n\nsetConfiguration({\n  // The breakpoints (minimum width) of devices in screen class sm, md, lg, xl, and xxl.\n  breakpoints: [375, 756, 1056, 1440, 1800],\n\n  // The container widths in pixels of devices in screen class sm, md, lg, xl, and xxl.\n  containerWidths: [],\n\n  // The gutter width in pixels. A gutter width of 30 means 15px on each side of a column.\n  gutterWidth: 24,\n\n  // The number of columns in the grid .\n  gridColumns: 12,\n\n  // The screen class used when the view port cannot be determined using window.\n  defaultScreenClass: 'xxl',\n\n  // The maximum screen class to be used.\n  maxScreenClass: 'xxl',\n});\n\nfunction App() {\n  return (\n    <Router>\n    <ScreenClassProvider>\n      <GridHelper />\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/index\">Index</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <div>Home</div>\n          </Route>\n          <Route path=\"/index\">\n            <Index />\n          </Route>\n        </Switch>\n      </div>\n    </ScreenClassProvider>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}